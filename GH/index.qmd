---
title: "Brownlow Medal Model"
format: 
  html:
    theme: cosmo
    grid:
      body-width: 2000px
    embed-resources: true
    template-partials: 
      - title-block.html
toc: true
title-block-banner: true
subtitle: "Plus a heap of tables and graphs"
author: "Rex Carruthers"
execute:
  echo: false
  warning: false
---

## Overview

Ordinal model for 0-3 votes scaled to 6 expected votes per match then simulated 10,000 times.

Model features:

-   Margin
-   Goals
-   Effective Disposals
-   Frees Against
-   Contested Marks
-   Intercept Marks
-   Uncontested Possessions
-   Contested Possessions
-   Spoils
-   Marks Inside 50
-   Clearances
-   ratingPoints
-   dreamTeamPoints
-   Metres Gained
-   Tackles
-   Random Intercept Effect - Derived from Link Mixed Model

## Simulation Summary

```{r}
library(tidyverse)
library(DT)
library(formattable)
library(plotly)
library(rmarkdown)

load(file = "MMOmodel3b-ul.RData")
```

```{r}
a %>% select(-ID) %>% arrange(desc(meanV)) %>%
  formattable(list(meanV = color_bar("lightblue"), area(col = first:topten) ~ color_tile("transparent", "green"))) %>%
  as.datatable(rownames = FALSE, filter = "top", options = list(
  columnDefs = list(
    list(width = '200px', targets = 0),
    list(width = '200px', targets = 1))))
```

## Round Expected Votes

```{r}
r %>% mutate(meanV = as.numeric(meanV)) %>% arrange(desc(meanV)) %>% select(-ID, -meanV) %>%
  formattable(list(area(col = `1`:`25`) ~ color_tile("transparent", "pink"))) %>%
  as.datatable(rownames = FALSE, filter = "top", options = list(
  columnDefs = list(
    list(width = '200px', targets = 0),
    list(width = '200px', targets = 1))))
```

## Vote Range Histogram - Top 10

```{r}
#| fig-height: 10
library(forcats)

p <- ggplot(data = sd, aes(x = Votes, fill = Playing.for)) +
      geom_histogram(colour = "black", binwidth = 1) +
      geom_vline(data = sd, aes(xintercept = meanV), linewidth = 1.5, linetype = "dashed", colour = "red") +
      geom_vline(data = sd, aes(xintercept = q25), linewidth = 1.5, linetype = "dashed", colour = "yellow") +
      geom_vline(data = sd, aes(xintercept = q975), linewidth = 1.5, linetype = "dashed", colour = "yellow") +
      geom_vline(data = sd, aes(xintercept = q150), linewidth = 1.5, linetype = "dashed", colour = "orange") +
      geom_vline(data = sd, aes(xintercept = q850), linewidth = 1.5, linetype = "dashed", colour = "orange") +
      facet_wrap(~fct_reorder(Player, meanV, .desc = TRUE), ncol = 1) +
  theme_bw()

ggplotly(p)
```

## Line Plot - Top 10

```{r}
#| fig-height: 10

lp <- ggplot(data = rss, aes(x = Round, y = cV, colour = Player)) +
  geom_line() +
  geom_point() +
  theme_bw()

ggplotly(lp)
```

## Game Viewer

```{r}
b %>% arrange(desc(mExpSV)) %>% select(Player, Round, Game, mExpSV, Margin, dreamTeamPoints, ratingPoints, Goals, `(Intercept)`) %>%
      formattable(list(mExpSV = color_bar("lightblue"),
                       area(col = Margin) ~ color_tile("transparent", "purple"),
                       dreamTeamPoints = color_bar("pink"),
                       ratingPoints = color_bar("lightgrey"),
                       Goals = color_bar("lightgreen"),
                       `(Intercept)` = color_bar("lightyellow"))) %>%
      as.datatable(rownames = FALSE, filter = "top", options = list(
  columnDefs = list(
    list(width = '200px', targets = 0),
    list(width = '50px', targets = 1),
    list(width = '300px', targets = 2))))
```
